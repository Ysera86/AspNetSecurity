using Microsoft.AspNetCore.Mvc;
using System.Diagnostics;
using System.Text.Encodings.Web;
using Vulnerability_XSS.Web.Models;

namespace Vulnerability_XSS.Web.Controllers
{
    public class HomeController : Controller
    {
        private readonly ILogger<HomeController> _logger;

        #region Encoderlar

        private readonly HtmlEncoder _htmlEncoder;
        private readonly JavaScriptEncoder _javascriptEncoder;
        private readonly UrlEncoder _urlEncoder;  // url için kullanılacaksa urlEncoder

        public HomeController(ILogger<HomeController> logger, HtmlEncoder htmlEncoder, JavaScriptEncoder javascriptEncoder, UrlEncoder urlEncoder)
        {
            _htmlEncoder = htmlEncoder;
            _javascriptEncoder = javascriptEncoder;
            _urlEncoder = urlEncoder;
            _logger = logger;
        }


        #endregion


        public IActionResult Index()
        {
            return View();
        }

        public IActionResult Privacy()
        {
            return View();
        }

        [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]
        public IActionResult Error()
        {
            return View(new ErrorViewModel { RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier });
        }

        public IActionResult CommentAdd()
        {
            #region  Reflected XSS
            
            HttpContext.Response.Cookies.Append("email", "abc@abc.com");
            HttpContext.Response.Cookies.Append("password", "1234"); 

            #endregion

            #region  #region Stored XSS

            if (System.IO.File.Exists("comment.txt"))
            {
                ViewBag.comments = System.IO.File.ReadAllLines("comment.txt");
            } 

            #endregion

            return View();
        }

        [HttpPost]
        // Kullanıcıdan aldığım bilgileri hiçbir işleme tabi tutmadan htmle gönderiyorum > XSS zaafiyeti nedeni
        public IActionResult CommentAdd(string name, string comment)
        {
            #region Reflected XSS

            ViewBag.name = name;
            ViewBag.comment = comment;

            #endregion

            #region Stored XSS

            System.IO.File.AppendAllText("comment.txt", $"{name}-{comment}\n");

            #endregion


            #region UrlEncoder : diyelim ki kullanıcıdan gelen name alanını querystrige vericez önce encode

            var encodedUrl = _urlEncoder.Encode(name);

            #endregion

            return RedirectToAction("CommentAdd");
        }
    }
}